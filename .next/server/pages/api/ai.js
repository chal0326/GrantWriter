"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ai";
exports.ids = ["pages/api/ai"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@google/generative-ai":
/*!****************************************!*\
  !*** external "@google/generative-ai" ***!
  \****************************************/
/***/ ((module) => {

module.exports = import("@google/generative-ai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai.js&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai.js&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/ai.js */ \"(api)/./pages/api/ai.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ai\",\n        pathname: \"/api/ai\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_ai_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFpJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZhaS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUM4QztBQUM5QztBQUNBLGlFQUFlLHdFQUFLLENBQUMsNkNBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDZDQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYW50LXdyaXRlci8/ZGJiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2FpLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWlcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9haVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/ai.js":
/*!*************************!*\
  !*** ./pages/api/ai.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"@google/generative-ai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_google_generative_ai__WEBPACK_IMPORTED_MODULE_0__]);\n_google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(\"AIzaSyBHu8vw1XvJKGufalwm3iLIuDc2gvh6Tgk\");\nconst CRITIQUE_PROMPT = `You are an expert grant writer who helps to connect small non-profits and startups led by powerful, strong, BIPOC women with financial abundance that allows the grant recipients to do tremendous good in the world.\n\nAnalyze the grant proposal and provide feedback in the following format:\n\n# Section Analysis\nFor each section below, indicate if it needs improvement (YES/NO) and provide specific feedback:\n\n## Opening Hook\nStatus: [YES/NO]\nFeedback: [Your specific feedback here]\n\n## Impact Statement\nStatus: [YES/NO]\nFeedback: [Your specific feedback here]\n\n## Mission Statement\nStatus: [YES/NO]\nFeedback: [Your specific feedback here]\n\n## Goals & Objectives\nStatus: [YES/NO]\nFeedback: [Your specific feedback here]\n\n## Budget Justification\nStatus: [YES/NO]\nFeedback: [Your specific feedback here]\n\nBe specific in your feedback, explaining exactly what isn't working and why.`;\nconst IMPROVEMENT_PROMPT = `Based on the critique provided, generate two distinctly different approaches for improving this section: {section}. \n\nFor context, here is the full draft:\n{content}\n\nFormat your response exactly like this:\n\nOption 1:\n[Complete rewrite with first approach - focus on being direct and impactful]\n\nOption 2:\n[Complete rewrite with second approach - focus on being descriptive and detailed]\n\nMake each option distinctly different in tone and emphasis. Each option should be complete and ready to use.\nEach option should maintain proper formatting and structure.`;\nconst FINAL_REVIEW_PROMPT = `Review this draft holistically and provide actionable feedback. Consider how well it flows and if it presents a compelling narrative.\n\nFormat your response like this:\n\n## Overall Assessment\n[Provide a brief evaluation of the draft's effectiveness and potential impact]\n\n## Key Strengths\n- [Specific strength with explanation]\n- [Specific strength with explanation]\n- [Specific strength with explanation]\n\n## Recommended Improvements\n- [Specific, actionable improvement suggestion]\n- [Specific, actionable improvement suggestion]\n- [Specific, actionable improvement suggestion]\n\n## Final Recommendations\n[Concrete next steps and suggestions for strengthening the proposal further]`;\nconst generationConfig = {\n    temperature: 1,\n    topP: 0.95,\n    topK: 64,\n    maxOutputTokens: 8192\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        if (false) {}\n        const { action, text, sections } = req.body;\n        if (!text) {\n            return res.status(400).json({\n                error: \"Text content is required\"\n            });\n        }\n        // Clean the text content\n        const cleanText = text.replace(/`/g, \"\").trim();\n        if (!cleanText) {\n            return res.status(400).json({\n                error: \"Text content is empty after cleaning\"\n            });\n        }\n        const model = genAI.getGenerativeModel({\n            model: \"gemini-pro\",\n            generationConfig\n        });\n        let prompt;\n        switch(action){\n            case \"critique\":\n                prompt = CRITIQUE_PROMPT;\n                break;\n            case \"improve\":\n                if (!sections || sections.length === 0) {\n                    return res.status(400).json({\n                        error: \"Sections are required for improvements\"\n                    });\n                }\n                // Handle multiple sections at once\n                const improvements = {};\n                for (const section of sections){\n                    const sectionPrompt = IMPROVEMENT_PROMPT.replace(\"{section}\", section).replace(\"{content}\", cleanText);\n                    const result = await model.generateContent(sectionPrompt);\n                    const response = await result.response;\n                    const text = response.text();\n                    // Parse the two options\n                    const parts = text.split(/Option [12]:/);\n                    if (parts.length < 3) {\n                        console.error(\"Invalid improvement format for section:\", section);\n                        continue;\n                    }\n                    improvements[section] = [\n                        parts[1].trim(),\n                        parts[2].trim()\n                    ];\n                }\n                return res.status(200).json({\n                    improvements\n                });\n            case \"final\":\n                prompt = FINAL_REVIEW_PROMPT;\n                break;\n            default:\n                return res.status(400).json({\n                    error: \"Invalid action\"\n                });\n        }\n        console.log(`Processing ${action} request...`);\n        const result = await model.generateContent(prompt + \"\\n\\n\" + cleanText);\n        const response = await result.response;\n        const responseText = response.text();\n        if (!responseText || responseText.trim().length === 0) {\n            throw new Error(\"Empty response from AI\");\n        }\n        if (action === \"critique\") {\n            const sections = {};\n            let currentSection = null;\n            let currentStatus = null;\n            let currentFeedback = [];\n            const lines = responseText.split(\"\\n\");\n            for (let line of lines){\n                line = line.trim();\n                if (!line) continue;\n                if (line.startsWith(\"## \")) {\n                    if (currentSection) {\n                        const key = currentSection.toLowerCase().replace(/[^a-z0-9]+/g, \"_\");\n                        sections[key] = {\n                            id: key,\n                            name: currentSection,\n                            needsWork: currentStatus === \"YES\",\n                            feedback: currentFeedback.join(\"\\n\").trim(),\n                            text: \"\" // Will be populated from the draft\n                        };\n                    }\n                    currentSection = line.replace(\"## \", \"\").trim();\n                    currentStatus = null;\n                    currentFeedback = [];\n                } else if (line.startsWith(\"Status:\")) {\n                    currentStatus = line.replace(\"Status:\", \"\").trim();\n                } else if (line.startsWith(\"Feedback:\")) {\n                    currentFeedback = [\n                        line.replace(\"Feedback:\", \"\").trim()\n                    ];\n                } else if (currentFeedback) {\n                    currentFeedback.push(line);\n                }\n            }\n            // Save the last section\n            if (currentSection) {\n                const key = currentSection.toLowerCase().replace(/[^a-z0-9]+/g, \"_\");\n                sections[key] = {\n                    id: key,\n                    name: currentSection,\n                    needsWork: currentStatus === \"YES\",\n                    feedback: currentFeedback.join(\"\\n\").trim(),\n                    text: \"\" // Will be populated from the draft\n                };\n            }\n            // Extract section content from the draft\n            let currentDraftSection = null;\n            let currentContent = [];\n            const draftLines = cleanText.split(\"\\n\");\n            for (const line of draftLines){\n                if (line.trim().startsWith(\"## \")) {\n                    if (currentDraftSection) {\n                        const key = currentDraftSection.toLowerCase().replace(/[^a-z0-9]+/g, \"_\");\n                        if (sections[key]) {\n                            sections[key].text = currentContent.join(\"\\n\").trim();\n                        }\n                    }\n                    currentDraftSection = line.replace(/^## /, \"\").trim();\n                    currentContent = [];\n                } else if (currentDraftSection) {\n                    currentContent.push(line);\n                }\n            }\n            // Save the last section content\n            if (currentDraftSection) {\n                const key = currentDraftSection.toLowerCase().replace(/[^a-z0-9]+/g, \"_\");\n                if (sections[key]) {\n                    sections[key].text = currentContent.join(\"\\n\").trim();\n                }\n            }\n            return res.status(200).json({\n                sections: Object.values(sections)\n            });\n        }\n        return res.status(200).json({\n            feedback: responseText\n        });\n    } catch (error) {\n        console.error(\"AI API Error:\", error);\n        return res.status(500).json({\n            error: \"Failed to process with AI\",\n            details: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/ai.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fai.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();